{"version":3,"sources":["components/Header.js","components/Clock.js","components/ProgressBar.js","api/FakeTimeboxesApi.js","actions.js","components/CurrentTimebox.js","lib/time.js","components/TimeboxCreator.js","components/FinishedTimeboxesList.js","components/TimeboxesList.js","components/Timebox.js","components/TimeboxEditor.js","components/EditableTimebox.js","components/SearchTimeboxes.js","components/TimeboxesManager.js","components/InspirationalQuote.js","components/UserGreeting.js","components/AuthenticatedApp.js"],"names":["Header","children","length","Error","className","Clock","minutes","seconds","style","defaultProps","ProgressBar","percent","big","color","progressClassName","classNames","width","timeboxes","id","title","totalTimeInMinutes","finished","findIndexByAnId","result","findIndex","timebox","FakeTimeboxesAPI","getAllTimeboxes","a","wait","addTimebox","timeboxToAdd","addedTimebox","uuid","v4","push","replaceTimebox","timeboxToReplace","index","replacedTimebox","removeTimebox","timeboxToRemove","splice","stopEditingTimebox","type","types","fetchAllTimeboxes","accessToken","dispatch","TimeboxesAPI","then","setTimeboxes","catch","error","setError","finally","removeTimeboxRemotely","removedTimebox","CurrentTimebox","props","state","isRunning","isPaused","isFinished","pausesCount","elapsedTimeInSeconds","handleStart","bind","handleStop","togglePause","intervalId","prevProps","prevState","this","onFinish","stopTimer","event","setState","startTimer","window","setInterval","totalTimeInSeconds","Math","min","clearInterval","durationInSeconds","onCancel","floor","minutesLeft","secondsLeft","progressInPercent","onClick","disabled","React","Component","connect","currentTimebox","getCurrentTimebox","ownProps","getState","isAnyTimeboxCurrent","validate","values","errors","TimeboxCreator","onCreate","formik","useFormik","initialValues","onSubmit","resetForm","handleSubmit","htmlFor","name","onChange","handleChange","onBlur","handleBlur","value","touched","step","getFinishedTimeboxes","map","key","TimeboxesList","renderTimebox","RemainingTimeboxesList","getRemainingTimeboxes","onDelete","onEdit","onMakeCurrent","TimeboxEditor","initialTitle","initialTotalTimeInMinutes","onUpdate","EditableTimebox","isEdited","isTimeboxEdited","currentlyEditedTimeboxId","SearchTimeboxes","search","placeholder","TimeboxesManager","useDispatch","useContext","AuthenticationContext","timeboxesLoading","useSelector","areTimeboxesLoading","timeboxesLoadingError","getTimeboxesLoadingError","useEffect","e","payload","target","toLowerCase","searchInput","createdTimebox","console","log","updatedTimebox","timeboxToUpdate","InspirationalQuote","quote","Quotes","getQuote","text","author","UserGreeting","onLogout","Consumer","jwt","decode","email","getUserEmail","href","AuthenticatedApp"],"mappings":"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","file":"static/js/4.0c7305e3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Header({ children }) {\r\n    if (children.length < 1) {\r\n        throw new Error(\"Header has to have at least one child!\")\r\n    }\r\n    return (\r\n        <header className=\"header\">\r\n            {children}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Clock({ className, minutes, seconds }) {\r\n    return <h2 style={{}} className={\"Clock  \" + className}>Pozostało {minutes}:{seconds}</h2>\r\n}\r\nClock.defaultProps = {\r\n    className: \"\"\r\n}\r\nconst NumberOrStringType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\r\nClock.propTypes = {\r\n    className: PropTypes.string.isRequired,\r\n    minutes: NumberOrStringType.isRequired,\r\n    seconds: NumberOrStringType.isRequired\r\n}\r\n\r\nexport default Clock;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction ProgressBar({ className = \"\", percent = 33, big=false, color = null }) {\r\n    let progressClassName = classNames(\r\n        \"progress\",\r\n        className,\r\n        {\r\n            \"progress--big\": big,\r\n            \"progress--color-red\": color === \"red\"\r\n        }\r\n    );\r\n    return (\r\n        <div className={progressClassName}>\r\n            <div className=\"progress__bar\" style={{width: `${percent}%`}}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import uuid from \"uuid\";\r\nimport { wait } from \"./wait\";\r\n\r\nconst timeboxes = [\r\n  {\r\n    id: 1,\r\n    title: \"Uczę się o promises\",\r\n    totalTimeInMinutes: 25,\r\n    finished: false,\r\n  },\r\n  { id: 2, title: \"Poznaję REST API\", totalTimeInMinutes: 10, finished: false },\r\n  {\r\n    id: 3,\r\n    title: \"Ćwiczę async/await\",\r\n    totalTimeInMinutes: 15,\r\n    finished: false,\r\n  },\r\n  { id: 4, title: \"Uczę się fetch\", totalTimeInMinutes: 5, finished: false },\r\n];\r\nfunction findIndexByAnId(id) {\r\n  const result = timeboxes.findIndex((timebox) => timebox.id === id);\r\n  if (result < 0) {\r\n    throw new Error(\"Timebox o podanym id nie istnieje\");\r\n  }\r\n  return result;\r\n}\r\nconst FakeTimeboxesAPI = {\r\n  getAllTimeboxes: async function () {\r\n    await wait(200);\r\n    // console.log(\"GET all\", timeboxes);\r\n    return [...timeboxes];\r\n  },\r\n  addTimebox: async function (timeboxToAdd) {\r\n    await wait(200);\r\n    const addedTimebox = { ...timeboxToAdd, id: uuid.v4() };\r\n    timeboxes.push(addedTimebox);\r\n    // console.log(\"POST\", timeboxes);\r\n    return addedTimebox;\r\n  },\r\n  replaceTimebox: async function (timeboxToReplace) {\r\n    await wait(200);\r\n    if (!timeboxToReplace.id) {\r\n      throw new Error(\"Cannot replace timebox without an id.\");\r\n    }\r\n    const index = findIndexByAnId(timeboxToReplace.id);\r\n    const replacedTimebox = { ...timeboxToReplace };\r\n    timeboxes[index] = replacedTimebox;\r\n    // console.log(\"PUT\", timeboxes);\r\n    return replacedTimebox;\r\n  },\r\n  removeTimebox: async function (timeboxToRemove) {\r\n    await wait(200);\r\n    if (!timeboxToRemove.id) {\r\n      throw new Error(\"Cannot remove timebox without an id.\");\r\n    }\r\n    const index = findIndexByAnId(timeboxToRemove.id);\r\n    timeboxes.splice(index, 1);\r\n    // console.log(\"DELETE\", timeboxes);\r\n  },\r\n};\r\n\r\nexport default FakeTimeboxesAPI;\r\n","import TimeboxesAPI from \"./api/FakeTimeboxesApi\";\r\nimport { isAnyTimeboxCurrent, getCurrentTimebox } from \"./reducers\";\r\nimport * as types from \"./constants/types\";\r\n\r\nexport const setTimeboxes = (timeboxes) => ({\r\n  type: types.TIMEBOXES_SET,\r\n  timeboxes,\r\n});\r\nexport const addTimebox = (timebox) => ({ type: types.TIMEBOX_ADD, timebox });\r\nexport const replaceTimebox = (replacedTimebox) => ({\r\n  type: types.TIMEBOX_REPLACE,\r\n  replacedTimebox,\r\n});\r\nexport const removeTimebox = (removedTimebox) => ({\r\n  type: types.TIMEBOX_REMOVE,\r\n  removedTimebox,\r\n});\r\nexport const setError = (error) => ({ type: types.ERROR_SET, error });\r\nexport const disableLoadingIndicator = () => ({\r\n  type: types.LOADING_INDICATOR_DISABLE,\r\n});\r\nexport const stopEditingTimebox = () => ({ type: types.TIMEBOX_EDIT_STOP });\r\nexport const startEditingTimebox = (currentlyEditedTimeboxId) => ({\r\n  type: types.TIMEBOX_EDIT_START,\r\n  currentlyEditedTimeboxId,\r\n});\r\nexport const makeTimeboxCurrent = (timebox) => ({\r\n  type: types.TIMEBOX_MAKE_CURRENT,\r\n  timebox,\r\n});\r\n\r\nexport const finishCurrentTimebox = () => (dispatch, getState) => {\r\n  //   if (isAnyTimeboxCurrent(getState())) {\r\n  //     dispatch(removeTimebox(getCurrentTimebox(getState())));\r\n  //   }\r\n  if (isAnyTimeboxCurrent(getState())) {\r\n    dispatch({\r\n      type: types.CURRENT_TIMEBOX_FINISH,\r\n      timebox: getCurrentTimebox(getState()),\r\n    });\r\n  }\r\n};\r\n\r\nexport const stopCurrentTimebox = () => ({\r\n  type: types.STOP_CURRENT_TIMEBOX,\r\n});\r\n\r\nexport const searchInput = (e) => ({\r\n  type: types.SEARCH_INPUT,\r\n  payload: e.target.value.toLowerCase(),\r\n});\r\n\r\n// redux-thunk\r\nexport const fetchAllTimeboxes = (accessToken) => (dispatch) => {\r\n  TimeboxesAPI.getAllTimeboxes(accessToken)\r\n    .then((timeboxes) => dispatch(setTimeboxes(timeboxes)))\r\n    .catch((error) => dispatch(setError(error)))\r\n    .finally(() => dispatch(disableLoadingIndicator()));\r\n};\r\nexport const removeTimeboxRemotely = (timebox, accessToken) => (dispatch) => {\r\n  TimeboxesAPI.removeTimebox(timebox, accessToken).then(() =>\r\n    dispatch(removeTimebox(timebox))\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport { getMinutesAndSecondsFromDurationInSeconds } from \"../lib/time\";\r\nimport { getCurrentTimebox } from \"../reducers\";\r\nimport { finishCurrentTimebox, stopCurrentTimebox } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CurrentTimebox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isRunning: false,\r\n      isPaused: false,\r\n      isFinished: false,\r\n      pausesCount: 0,\r\n      elapsedTimeInSeconds: 0,\r\n    };\r\n    this.handleStart = this.handleStart.bind(this);\r\n    this.handleStop = this.handleStop.bind(this);\r\n    this.togglePause = this.togglePause.bind(this);\r\n    this.intervalId = null;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!prevState.isFinished && this.state.isFinished) {\r\n      this.props.onFinish();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.stopTimer();\r\n  }\r\n  handleStart(event) {\r\n    this.setState({\r\n      isRunning: true,\r\n    });\r\n    this.startTimer();\r\n  }\r\n  handleStop(event) {\r\n    this.setState({\r\n      isRunning: false,\r\n      isPaused: false,\r\n      pausesCount: 0,\r\n      elapsedTimeInSeconds: 0,\r\n    });\r\n    this.stopTimer();\r\n  }\r\n  startTimer() {\r\n    if (this.intervalId === null) {\r\n      this.intervalId = window.setInterval(() => {\r\n        this.setState((prevState) => {\r\n          const { totalTimeInMinutes } = this.props;\r\n          const totalTimeInSeconds = totalTimeInMinutes * 60;\r\n          const elapsedTimeInSeconds = Math.min(\r\n            prevState.elapsedTimeInSeconds + 0.1,\r\n            totalTimeInSeconds\r\n          );\r\n          const isFinished =\r\n            prevState.isFinished || elapsedTimeInSeconds >= totalTimeInSeconds;\r\n          if (isFinished) {\r\n            this.stopTimer();\r\n          }\r\n          const isRunning = prevState.isRunning && !isFinished;\r\n          const isPaused = prevState.isPaused && !isFinished;\r\n          return { elapsedTimeInSeconds, isFinished, isRunning, isPaused };\r\n        });\r\n      }, 100);\r\n    }\r\n  }\r\n  stopTimer() {\r\n    window.clearInterval(this.intervalId);\r\n    this.intervalId = null;\r\n  }\r\n  togglePause() {\r\n    this.setState(function (prevState) {\r\n      const isPaused = !prevState.isPaused;\r\n      if (isPaused) {\r\n        this.stopTimer();\r\n      } else {\r\n        this.startTimer();\r\n      }\r\n      return {\r\n        isPaused,\r\n        pausesCount: isPaused\r\n          ? prevState.pausesCount + 1\r\n          : prevState.pausesCount,\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFinished,\r\n      isPaused,\r\n      isRunning,\r\n      pausesCount,\r\n      elapsedTimeInSeconds,\r\n    } = this.state;\r\n    const { title, totalTimeInMinutes, onCancel } = this.props;\r\n    const totalTimeInSeconds = totalTimeInMinutes * 60;\r\n    const timeLeftInSeconds = totalTimeInSeconds - elapsedTimeInSeconds;\r\n    const [\r\n      minutesLeft,\r\n      secondsLeft,\r\n    ] = getMinutesAndSecondsFromDurationInSeconds(timeLeftInSeconds);\r\n    const progressInPercent =\r\n      (elapsedTimeInSeconds / totalTimeInSeconds) * 100.0;\r\n    return (\r\n      <div className=\"CurrentTimebox\">\r\n        <h1>{title}</h1>\r\n        <Clock\r\n          minutes={minutesLeft}\r\n          seconds={secondsLeft}\r\n          className={isPaused ? \"inactive\" : \"\"}\r\n        />\r\n        <ProgressBar\r\n          percent={progressInPercent}\r\n          className={isPaused ? \"inactive\" : \"\"}\r\n          color=\"red\"\r\n          big\r\n        />\r\n        <button onClick={this.handleStart} disabled={isRunning || isFinished}>\r\n          Start\r\n        </button>\r\n        <button onClick={this.handleStop} disabled={!isRunning}>\r\n          Stop\r\n        </button>\r\n        <button onClick={this.togglePause} disabled={!isRunning}>\r\n          {isPaused ? \"Wznów\" : \"Pauzuj\"}\r\n        </button>\r\n        Liczba przerw: {pausesCount}\r\n        <button onClick={onCancel}>reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CurrentTimeboxOrNothing({ currentTimebox, onFinish, onCancel }) {\r\n  if (currentTimebox) {\r\n    const { title, totalTimeInMinutes } = currentTimebox;\r\n    return (\r\n      <CurrentTimebox\r\n        title={title}\r\n        totalTimeInMinutes={totalTimeInMinutes}\r\n        onFinish={onFinish}\r\n        onCancel={onCancel}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const currentTimebox = getCurrentTimebox(state);\r\n\r\n  return {\r\n    currentTimebox,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    onFinish: () => dispatch(finishCurrentTimebox()),\r\n    onCancel: () => dispatch(stopCurrentTimebox()),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrentTimeboxOrNothing);\r\n","function getMinutesAndSecondsFromDurationInSeconds(durationInSeconds) {\r\n    const minutes = Math.floor(durationInSeconds / 60);\r\n    const seconds = Math.floor(durationInSeconds % 60);\r\n    return [minutes, seconds];\r\n}\r\n\r\nexport {\r\n    getMinutesAndSecondsFromDurationInSeconds\r\n};","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  } else if (values.title.length < 3) {\r\n    errors.title = \"Must be 3 characters or less\";\r\n  }\r\n\r\n  if (!values.totalTimeInMinutes) {\r\n    errors.totalTimeInMinutes = \"Required\";\r\n  } else if (values.totalTimeInMinutes <= 0) {\r\n    errors.totalTimeInMinutes = \"Must be greater than 0\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst TimeboxCreator = ({ onCreate }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      totalTimeInMinutes: \"\",\r\n      finished: false,\r\n    },\r\n    validate,\r\n    onSubmit: (values, { resetForm }) => {\r\n      onCreate(values);\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className=\"TimeboxCreator\">\r\n      <label htmlFor=\"title\">\r\n        Co robisz ?\r\n        <input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.title}\r\n        />\r\n      </label>\r\n      {formik.touched.title && formik.errors.title ? (\r\n        <div className=\"error\">{formik.errors.title}</div>\r\n      ) : null}\r\n      <br />\r\n      <label htmlFor=\"totalTimeInMinutes\">\r\n        Ile minut ?\r\n        <input\r\n          id=\"totalTimeInMinutes\"\r\n          name=\"totalTimeInMinutes\"\r\n          type=\"number\"\r\n          step=\"0.1\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.totalTimeInMinutes}\r\n        />\r\n      </label>\r\n      {formik.touched.totalTimeInMinutes && formik.errors.totalTimeInMinutes ? (\r\n        <div className=\"error\">{formik.errors.totalTimeInMinutes}</div>\r\n      ) : null}\r\n      <br />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// class TimeboxCreator extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.titleInput = React.createRef();\r\n//     this.totalTimeInMinutesInput = React.createRef();\r\n//   }\r\n//   handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     this.props.onCreate({\r\n//       title: this.titleInput.current.value,\r\n//       totalTimeInMinutes: this.totalTimeInMinutesInput.current.value,\r\n//       finished: false,\r\n//     });\r\n//     this.titleInput.current.value = \"\";\r\n//     this.totalTimeInMinutesInput.current.value = \"\";\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit} className=\"TimeboxCreator\">\r\n//         <label>\r\n//           Co robisz?\r\n//           <input ref={this.titleInput} type=\"text\" />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Ile minut?\r\n//           <input ref={this.totalTimeInMinutesInput} type=\"number\" step=\"0.01\" />\r\n//         </label>\r\n//         <br />\r\n//         <button>Dodaj timebox</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default TimeboxCreator;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFinishedTimeboxes } from \"../reducers\";\r\n\r\nfunction FinishedTimeboxesList({ timeboxes }) {\r\n  return (\r\n    <>\r\n      {timeboxes.map(({ id, title, totalTimeInMinutes }) => (\r\n        <div className=\"TimeboxFinished\" key={id}>\r\n          <h3>\r\n            {title} - {totalTimeInMinutes} min.\r\n          </h3>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const timeboxes = getFinishedTimeboxes(state);\r\n  // console.log(timeboxes);\r\n  return { timeboxes };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FinishedTimeboxesList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllTimeboxes, getRemainingTimeboxes } from \"../reducers\";\r\n\r\nexport function TimeboxesList({ timeboxes, renderTimebox }) {\r\n    return <div className=\"TimeboxesList\">{timeboxes.map(renderTimebox)}</div>;\r\n}\r\n\r\nexport const AllTimeboxesList = connect(\r\n    (state) => ({ timeboxes: getAllTimeboxes(state)})\r\n)(TimeboxesList);\r\n\r\n\r\nexport const RemainingTimeboxesList = connect(\r\n    (state) => ({ timeboxes: getRemainingTimeboxes(state)})\r\n)(TimeboxesList);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentTimebox } from \"../reducers\";\r\n\r\nfunction mapStateToProps(state) {\r\n  const currentTimebox = getCurrentTimebox(state);\r\n\r\n  return {\r\n    currentTimebox,\r\n  };\r\n}\r\n\r\nfunction Timebox({\r\n  title,\r\n  totalTimeInMinutes,\r\n  onDelete,\r\n  onEdit,\r\n  onMakeCurrent,\r\n  currentTimebox,\r\n}) {\r\n  return (\r\n    <div className=\"Timebox\">\r\n      <h3>\r\n        {title} - {totalTimeInMinutes} min.\r\n      </h3>\r\n      <button disabled={currentTimebox} onClick={onDelete}>\r\n        Usuń\r\n      </button>\r\n      <button disabled={currentTimebox} onClick={onEdit}>\r\n        Zmień\r\n      </button>\r\n      <button onClick={onMakeCurrent}>\r\n        Zacznij teraz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps)(Timebox);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  } else if (values.title.length < 3) {\r\n    errors.title = \"Must have  min 3 characters\";\r\n  }\r\n\r\n  if (!values.totalTimeInMinutes) {\r\n    errors.totalTimeInMinutes = \"Required\";\r\n  } else if (values.totalTimeInMinutes <= 0) {\r\n    errors.totalTimeInMinutes = \"Must be more than 0\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst TimeboxEditor = ({\r\n  initialTitle,\r\n  initialTotalTimeInMinutes,\r\n  onCancel,\r\n  onUpdate,\r\n}) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: initialTitle,\r\n      totalTimeInMinutes: initialTotalTimeInMinutes,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      onUpdate(values);\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className=\"TimeboxEditor\">\r\n      <label htmlFor=\"title\">\r\n        Co robisz ?\r\n        <input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.title}\r\n        />\r\n      </label>\r\n      {formik.errors.title ? (\r\n        <div className=\"error\">{formik.errors.title}</div>\r\n      ) : null}\r\n      <br />\r\n      <label htmlFor=\"totalTimeInMinutes\">\r\n        Ile minut ?\r\n        <input\r\n          id=\"totalTimeInMinutes\"\r\n          name=\"totalTimeInMinutes\"\r\n          type=\"number\"\r\n          step=\"0.1\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.totalTimeInMinutes}\r\n        />\r\n      </label>\r\n      {formik.errors.totalTimeInMinutes ? (\r\n        <div className=\"error\">{formik.errors.totalTimeInMinutes}</div>\r\n      ) : null}\r\n      <br />\r\n      <button onClick={onCancel}>Anuluj</button>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// class TimeboxEditor extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.titleInput = React.createRef();\r\n//         this.totalTimeInMinutesInput = React.createRef();\r\n//     }\r\n//     handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         this.props.onUpdate({\r\n//             title: this.titleInput.current.value,\r\n//             totalTimeInMinutes: this.totalTimeInMinutesInput.current.value\r\n//         });\r\n//         this.resetToInitialValues();\r\n//     }\r\n//     handleCancel = () => {\r\n//         this.resetToInitialValues();\r\n//         this.props.onCancel();\r\n//     }\r\n//     resetToInitialValues() {\r\n//         this.titleInput.current.value = this.props.initialTitle;\r\n//         this.totalTimeInMinutesInput.current.value = this.props.initialTotalTimeInMinutes;\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit} className=\"TimeboxEditor\">\r\n//                 <label>\r\n//                     Co robisz?\r\n//                     <input\r\n//                         ref={this.titleInput}\r\n//                         defaultValue={this.props.initialTitle}\r\n//                         type=\"text\"\r\n//                     />\r\n//                 </label><br/>\r\n//                 <label>\r\n//                     Ile minut?\r\n//                     <input\r\n//                         ref={this.totalTimeInMinutesInput}\r\n//                         defaultValue={this.props.initialTotalTimeInMinutes}\r\n//                         type=\"number\"\r\n//                         step=\"0.01\"\r\n//                     />\r\n//                 </label><br />\r\n//                 <a onClick={this.handleCancel}>Anuluj</a>\r\n//                 <button\r\n//                 >Zapisz zmiany</button>\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default TimeboxEditor;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Timebox from \"./Timebox\";\r\nimport TimeboxEditor from \"./TimeboxEditor\";\r\nimport { isTimeboxEdited } from \"../reducers\";\r\nimport {\r\n  startEditingTimebox,\r\n  stopEditingTimebox,\r\n  makeTimeboxCurrent,\r\n} from \"../actions\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  isEdited: isTimeboxEdited(state, ownProps.timebox),\r\n});\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const onEdit = () => dispatch(startEditingTimebox(ownProps.timebox.id));\r\n  const onCancel = () => dispatch(stopEditingTimebox());\r\n  const onMakeCurrent = () => dispatch(makeTimeboxCurrent(ownProps.timebox));\r\n\r\n  return { onEdit, onCancel, onMakeCurrent };\r\n};\r\nexport const EditableTimebox = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(function EditableTimebox({\r\n  timebox,\r\n  isEdited,\r\n  onEdit,\r\n  onCancel,\r\n  onUpdate,\r\n  onDelete,\r\n  onMakeCurrent,\r\n}) {\r\n  return (\r\n    <>\r\n      {isEdited ? (\r\n        <TimeboxEditor\r\n          initialTitle={timebox.title}\r\n          initialTotalTimeInMinutes={timebox.totalTimeInMinutes}\r\n          onCancel={onCancel}\r\n          onUpdate={onUpdate}\r\n        />\r\n      ) : (\r\n        <Timebox\r\n          key={timebox.id}\r\n          title={timebox.title}\r\n          totalTimeInMinutes={timebox.totalTimeInMinutes}\r\n          onDelete={onDelete}\r\n          onEdit={onEdit}\r\n          onMakeCurrent={onMakeCurrent}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nfunction SearchTimeboxes({ search }) {\r\n  return (\r\n    <div className=\"TimeboxSearch\">\r\n      <input type=\"text\" placeholder=\"search timeboxes\" onChange={search} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchTimeboxes;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TimeboxCreator from \"./TimeboxCreator\";\r\nimport TimeboxesAPI from \"../api/FakeTimeboxesApi\";\r\nimport AuthenticationContext from \"../contexts/AuthenticationContext\";\r\nimport FinishedTimeboxesList from \"./FinishedTimeboxesList\";\r\nimport { RemainingTimeboxesList } from \"./TimeboxesList\";\r\n// import ReadOnlyTimebox from \"./ReadOnlyTimebox\";\r\nimport { areTimeboxesLoading, getTimeboxesLoadingError } from \"../reducers\";\r\nimport {\r\n  fetchAllTimeboxes,\r\n  addTimebox,\r\n  replaceTimebox,\r\n  removeTimeboxRemotely,\r\n  stopEditingTimebox,\r\n  searchInput,\r\n} from \"../actions\";\r\nimport { EditableTimebox } from \"./EditableTimebox\";\r\nimport SearchTimeboxes from \"./SearchTimeboxes\";\r\n\r\nfunction TimeboxesManager() {\r\n  const dispatch = useDispatch();\r\n  const { accessToken } = useContext(AuthenticationContext);\r\n\r\n  const timeboxesLoading = useSelector(areTimeboxesLoading);\r\n  const timeboxesLoadingError = useSelector(getTimeboxesLoadingError);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllTimeboxes(accessToken));\r\n  }, [accessToken, dispatch]);\r\n\r\n  const handleCreate = (createdTimebox) => {\r\n    try {\r\n      TimeboxesAPI.addTimebox(\r\n        createdTimebox,\r\n        accessToken\r\n      ).then((addedTimebox) => dispatch(addTimebox(addedTimebox)));\r\n    } catch (error) {\r\n      console.log(\"Jest błąd przy tworzeniu timeboxa:\", error);\r\n    }\r\n  };\r\n  const renderTimebox = (timebox) => {\r\n    const onUpdate = (updatedTimebox) => {\r\n      const timeboxToUpdate = { ...timebox, ...updatedTimebox };\r\n      TimeboxesAPI.replaceTimebox(\r\n        timeboxToUpdate,\r\n        accessToken\r\n      ).then((replacedTimebox) => dispatch(replaceTimebox(replacedTimebox)));\r\n      dispatch(stopEditingTimebox());\r\n    };\r\n    const onDelete = () =>\r\n      dispatch(removeTimeboxRemotely(timebox, accessToken));\r\n\r\n    return (\r\n      <EditableTimebox\r\n        key={timebox.id}\r\n        timebox={timebox}\r\n        onUpdate={onUpdate}\r\n        onDelete={onDelete}\r\n      />\r\n    );\r\n  };\r\n  // function renderReadOnlyTimebox(timebox, index) {\r\n  //   return (\r\n  //     <ReadOnlyTimebox\r\n  //       key={timebox.id}\r\n  //       title={timebox.title}\r\n  //       totalTimeInMinutes={timebox.totalTimeInMinutes}\r\n  //     />\r\n  //   );\r\n  // }\r\n  return (\r\n    <>\r\n      <SearchTimeboxes search={(e) => dispatch(searchInput(e))} />\r\n      <TimeboxCreator onCreate={handleCreate} />\r\n      {timeboxesLoading ? \"Timeboxy się ładują...\" : null}\r\n      {timeboxesLoadingError ? \"Nie udało się załadować :(\" : null}\r\n      <RemainingTimeboxesList renderTimebox={renderTimebox} />\r\n      <FinishedTimeboxesList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimeboxesManager;\r\n","import React from \"react\";\r\n\r\nclass InspirationalQuote extends React.Component {\r\n    state = {\r\n        quote: null\r\n    }\r\n    componentDidMount() {\r\n        import(\"inspirational-quotes\").then(\r\n            (Quotes) => {\r\n                this.setState({ quote: Quotes.getQuote() })\r\n            }\r\n        ).catch(() => console.log(\"Couldn't load quotes\"));     \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                { this.state.quote ?\r\n                <figure>\r\n                    <blockquote>{this.state.quote.text}</blockquote>\r\n                    <figcaption><cite>{this.state.quote.author}</cite></figcaption>\r\n                </figure> :\r\n                \"...\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InspirationalQuote;","import React from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport AuthenticationContext from \"../contexts/AuthenticationContext\";\r\n\r\nfunction UserGreeting({ onLogout }) {\r\n  return (\r\n    <AuthenticationContext.Consumer>\r\n      {({ accessToken }) => (\r\n        <>\r\n          Witaj {getUserEmail(accessToken)} /{\" \"}\r\n          <a href=\"#\" className=\"header__logout-link\" onClick={onLogout}>\r\n            wyloguj się\r\n          </a>\r\n        </>\r\n      )}\r\n    </AuthenticationContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(accessToken) {\r\n  const decodedToken = jwt.decode(accessToken);\r\n  return decodedToken.email;\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport CurrentTimebox from \"./CurrentTimebox\";\r\nimport TimeboxesManager from \"./TimeboxesManager\";\r\nimport InspirationalQuote from \"./InspirationalQuote\";\r\nimport UserGreeting from \"./UserGreeting\";\r\n\r\nfunction AuthenticatedApp({ onLogout }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <UserGreeting onLogout={onLogout} />\r\n      </Header>\r\n      <TimeboxesManager />\r\n      <CurrentTimebox />\r\n      <InspirationalQuote />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n"],"sourceRoot":""}